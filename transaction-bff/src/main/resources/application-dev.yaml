server:
  port: 8082
#  ssl:
#    key-store: classpath:keystore.jks
#    key-store-password: 9xsKsAJCRR
#    key-password: 9xsKsAJCRR
spring:
  application:
    name: transaction-bff
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/auth/realms/i9developement
          jwk-set-uri: http://localhost:8080/auth/realms/i9developement/protocol/openid-connect/certs
  cloud:
    kubernetes:
      config:
        enabled: false
        enableApi: false
  zipkin:
    base-url: 127.0.0.1:9411


  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
      client-id: transaction-producer-local
      transaction-id-prefix: ted
      properties:
        security:
          protocol: SASL_PLAINTEXT
        sasl:
          mechanism: PLAIN
          jaas:
            config: org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="jzPNJp85";
        enable:
          idempotence: true
        transactional:
          id: ted

  redis:
    host: localhost
    port: 6379
    time-to-live: 10000

  sleuth:
    sampler:
      probability: 1.0
    enabled: true

  cache:
    expireAfterWrite: 1
    maximumSize: 1024
    allowNullValues: false
    type: redis


  jackson:
    serialization:
      write_dates_as_timestamps: false
app:
  topic: transaction
  timeout: 5
  retries: 3
  urlTransaction: http://localhost:8083/v1/transactions/block?agencia=%d&conta=%d
  urlTransactionById: http://localhost:8083/v1/transactions/%s

logging:
  level:
    root: INFO
    org.springframework.web: DEBUG
    com.memorynotfound: DEBUG

management:
  metrics:
    enable:
      root: true
  endpoints:
    web:
      exposure:
        include: info, health, metrics
